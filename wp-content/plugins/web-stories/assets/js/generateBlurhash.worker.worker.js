(()=>{"use strict";const t=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","#","$","%","*","+",",","-",".",":",";","=","?","@","[","]","^","_","{","|","}","~"],a=(a,o)=>{var r="";for(let e=1;e<=o;e++){let h=Math.floor(a)/Math.pow(83,o-e)%83;r+=t[Math.floor(h)]}return r},o=t=>{let a=t/255;return a<=.04045?a/12.92:Math.pow((a+.055)/1.055,2.4)},r=t=>{let a=Math.max(0,Math.min(1,t));return a<=.0031308?Math.round(12.92*a*255+.5):Math.round(255*(1.055*Math.pow(a,1/2.4)-.055)+.5)},e=(t,a)=>(t<0?-1:1)*Math.pow(Math.abs(t),a);class ValidationError extends Error{constructor(t){super(t),this.name="ValidationError",this.message=t}}const h=(t,a,r,e)=>{let h=0,n=0,s=0;const l=4*a;for(let M=0;M<a;M++)for(let a=0;a<r;a++){const r=e(M,a);h+=r*o(t[4*M+0+a*l]),n+=r*o(t[4*M+1+a*l]),s+=r*o(t[4*M+2+a*l])}let M=1/(a*r);return[h*M,n*M,s*M]},n=(t,o,n,s,l)=>{if(s<1||s>9||l<1||l>9)throw new ValidationError("BlurHash must have between 1 and 9 components");if(o*n*4!==t.length)throw new ValidationError("Width and height must match the pixels array");let M=[];for(let a=0;a<l;a++)for(let r=0;r<s;r++){const e=0==r&&0==a?1:2,s=h(t,o,n,((t,h)=>e*Math.cos(Math.PI*r*t/o)*Math.cos(Math.PI*a*h/n)));M.push(s)}const i=M[0],c=M.slice(1);let m,f="";if(f+=a(s-1+9*(l-1),1),c.length>0){let t=Math.max(...c.map((t=>Math.max(...t)))),o=Math.floor(Math.max(0,Math.min(82,Math.floor(166*t-.5))));m=(o+1)/166,f+=a(o,1)}else m=1,f+=a(0,1);var u;return f+=a((r((u=i)[0])<<16)+(r(u[1])<<8)+r(u[2]),4),c.forEach((t=>{f+=a(((t,a)=>19*Math.floor(Math.max(0,Math.min(18,Math.floor(9*e(t[0]/a,.5)+9.5))))*19+19*Math.floor(Math.max(0,Math.min(18,Math.floor(9*e(t[1]/a,.5)+9.5))))+Math.floor(Math.max(0,Math.min(18,Math.floor(9*e(t[2]/a,.5)+9.5)))))(t,m),2)})),f},s=function(t){const{image:a,width:o,height:r,componentX:e,componentY:h}=t.data;if(a)try{const t=n(a,o,r,e,h);postMessage({type:"success",blurHash:t})}catch(t){postMessage({type:"error",error:t})}};self.addEventListener("message",s)})();